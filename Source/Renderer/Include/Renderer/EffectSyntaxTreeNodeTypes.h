//======================================================================================
//! @file         EffectSyntaxTreEEffectNodeTypes.h
//! @brief        Constants representing the different types of nodes in an Effect syntax tree
//!               
//!               
//!               
//! @author       Bryan Robertson
//! @date         Tuesday, 05 July 2005
//! @copyright    Bryan Robertson 2005
//
//				  This file is part of OidFX Engine.
//
//  			  OidFX Engine is free software; you can redistribute it and/or modify
//  			  it under the terms of the GNU General Public License as published by
//  			  the Free Software Foundation; either version 2 of the License, or
//  			  (at your option) any later version.
//
//  			  OidFX Engine is distributed in the hope that it will be useful,
//  			  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  			  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//  			  GNU General Public License for more details.
//
//  			  You should have received a copy of the GNU General Public License
//  			  along with OidFX Engine; if not, write to the Free Software
//  			  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
//
//======================================================================================


#ifndef RENDERER_EFFECTSYNTAXTREEEFFECTNODETYPES_H
#define RENDERER_EFFECTSYNTAXTREEEFFECTNODETYPES_H


//namespace Renderer
namespace Renderer
{

	enum EEffectNodeType
	{

		NODETYPE_ROOT = 1,
		NODETYPE_EFFECT,
		NODETYPE_TECHNIQUE,
		NODETYPE_LODLEVEL,
		NODETYPE_RECEIVESHADOWS,
		NODETYPE_CASTSHADOWS,
		NODETYPE_SORT,
		NODETYPE_SKYDOME,
		NODETYPE_NORMAL,
		NODETYPE_TRANSPARENT,
		NODETYPE_PASS,

		//Materials
		NODETYPE_AMBIENT,
		NODETYPE_DIFFUSE,
		NODETYPE_SPECULAR,
		NODETYPE_SHININESS,
		NODETYPE_EMISSIVE,
		NODETYPE_VERTEXCOLOUR,

		//Blending
		NODETYPE_SCENEBLEND,
		NODETYPE_MODULATE,
		NODETYPE_ADD,
		NODETYPE_COLOURBLEND,
		NODETYPE_ALPHABLEND,
		NODETYPE_ZERO,				
		NODETYPE_SRCCOLOUR,
		NODETYPE_INVSRCCOLOUR,		
		NODETYPE_SRCALPHA,			
		NODETYPE_INVSRCALPHA,	
		NODETYPE_SRCALPHASAT,		
		NODETYPE_DESTALPHA,		
		NODETYPE_INVDESTALPHA,		
		NODETYPE_DESTCOLOUR,		
		NODETYPE_INVDESTCOLOUR,	
		NODETYPE_NODETYPEFACTOR,		
		NODETYPE_INVNODETYPEFACTOR,	
		NODETYPE_BOTHINVSRCALPHA,	

		//Depth testing
		NODETYPE_DEPTHTEST,
		NODETYPE_DEPTHWRITE,
		NODETYPE_DEPTHFUNC,
		NODETYPE_DEPTHBIAS,

		//Alpha testing
		NODETYPE_ALPHATEST,
		NODETYPE_ALPHAREF,

		//Stencil testing
		NODETYPE_STENCILTEST,
		NODETYPE_STENCILREF,
		NODETYPE_STENCILFUNC,
		NODETYPE_STENCILPASS,
		NODETYPE_STENCILFAIL,
		NODETYPE_STENCILZFAIL,
		NODETYPE_STENCILMASK,
		NODETYPE_STENCILWRITEMASK,
		NODETYPE_KEEP,				
		NODETYPE_REPLACE,	
		NODETYPE_INCRSAT,	
		NODETYPE_DECRSAT,	
		NODETYPE_INVERT,	
		NODETYPE_INCR,		
		NODETYPE_DECR,		

		//CmpFunc
		NODETYPE_ALWAYS,
		NODETYPE_NEVER,
		NODETYPE_LESS,
		NODETYPE_LEQUAL,
		NODETYPE_EQUAL,
		NODETYPE_NOTEQUAL,
		NODETYPE_GEQUAL,
		NODETYPE_GREATER,

		//Culling
		NODETYPE_CULLINGMODE,
		NODETYPE_COUNTERCLOCKWISE,
		NODETYPE_CLOCKWISE,

		//Lighting
		NODETYPE_LIGHTING,
		NODETYPE_MAXLIGHTS,
		NODETYPE_ITERATION,
		NODETYPE_ONCE,
		NODETYPE_ONCEPERLIGHT,
		NODETYPE_DIRECTIONAL,
		NODETYPE_POINT,
		NODETYPE_SPOT,

		//Shading
		NODETYPE_SHADING,
		NODETYPE_GOURAUD,
		NODETYPE_LINEAR,

		//Fog
		NODETYPE_NONE,
		NODETYPE_PHONG,
		NODETYPE_EXP,
		NODETYPE_EXP2,
		NODETYPE_FLAT,
		NODETYPE_FOGOVERRIDE,
		NODETYPE_FOGTYPE,
		NODETYPE_FOGDENSITY,
		NODETYPE_FOGSTART,
		NODETYPE_FOGEND,
		NODETYPE_FOGCOLOUR,

		//Colour write
		NODETYPE_COLOURWRITE,

		//Misc
		NODETYPE_NORMALISENORMALS,
		NODETYPE_SPECULARHIGHLIGHTS,

		//Texture unit
		NODETYPE_TEXTUREUNIT,
		NODETYPE_AUTOGENERATED,
		NODETYPE_TEXTURE,
		NODETYPE_TEX1D,
		NODETYPE_TEX2D,
		NODETYPE_TEXCUBEMAP,

		//Texture coordinates
		NODETYPE_TEXCOORDSET,
		NODETYPE_TEXCOORDGEN,
		NODETYPE_EYESPACE_NORMAL,
		NODETYPE_EYESPACE_REFLECTION,
		NODETYPE_SPHEREMAP,

		//Texture addressing
		NODETYPE_ADDRESSINGMODE,
		NODETYPE_ADDRESSMODE_U,
		NODETYPE_ADDRESSMODE_V,
		NODETYPE_ADDRESSMODE_W,
		NODETYPE_CLAMP,
		NODETYPE_MIRROR,
		NODETYPE_MIRRORONCE,
		NODETYPE_BORDER,
		NODETYPE_WRAP,

		//Filtering
		NODETYPE_FILTERING,
		NODETYPE_BILINEAR,
		NODETYPE_TRILINEAR,
		NODETYPE_ANISOTROPIC,
		NODETYPE_MAXANISOTROPY,

		NODETYPE_COLOUROP,
		NODETYPE_ALPHAOP,
		NODETYPE_ADDSIGNED,
		NODETYPE_ADDSMOOTH,
		NODETYPE_BLENDCURRENTALPHA,
		NODETYPE_BLENDDIFFUSEALPHA,
		NODETYPE_BLENDMANUAL,
		NODETYPE_BLENDTEXTUREALPHA,
		NODETYPE_MODULATE2X,
		NODETYPE_MODULATE4X,
		NODETYPE_SUBTRACT,
		NODETYPE_SELECTARG1,
		NODETYPE_SELECTARG2,
		NODETYPE_DOTPRODUCT3,
		NODETYPE_CURRENT,
		NODETYPE_MANUAL,
		NODETYPE_BLENDFACTOR,
		NODETYPE_BLENDFACTORALPHA,
		NODETYPE_BLENDTEXTUREALPHAPM,
		NODETYPE_CONSTANT,
		NODETYPE_DISABLE,
		NODETYPE_INVBLENDFACTOR,
		NODETYPE_LERP,
		NODETYPE_MODULATEALPHA_ADDALPHA,
		NODETYPE_MODULATEALPHA_ADDCOLOUR,
		NODETYPE_MODULATECOLOUR_ADDALPHA,
		NODETYPE_MULTIPLYADD,
		NODETYPE_ONE,
		NODETYPE_PREMODULATE,
		NODETYPE_TEMP,
		NODETYPE_TEXTUREFACTOR,
		NODETYPE_CONSTANTCOLOUR,

		NODETYPE_SCROLL,
		NODETYPE_SCROLLANIM,
		NODETYPE_ROTATE,
		NODETYPE_ROTATEANIM,
		NODETYPE_SCALE,
		NODETYPE_SCALEANIM,
		NODETYPE_WAVEXFORM,
		NODETYPE_INVERSE_SAWTOOTH,
		NODETYPE_SAWTOOTH,
		NODETYPE_SCALE_X,
		NODETYPE_SCALE_Y,
		NODETYPE_SCROLL_X,
		NODETYPE_SCROLL_Y,
		NODETYPE_SINE,
		NODETYPE_SQUARE,
		NODETYPE_TRIANGLE,
		NODETYPE_AMPLITUDE,
		NODETYPE_BASE,
		NODETYPE_FREQUENCY,
		NODETYPE_PHASE,
		NODETYPE_WAVETYPE,
		NODETYPE_XFORMTYPE,

		NODETYPE_FLOATVALUE,
		NODETYPE_STRINGLITERAL,
		NODETYPE_UINTVALUE,
		NODETYPE_INTVALUE,
		NODETYPE_BOOLEAN
	};


};
//End namespace Renderer


#endif
//#ifndef RENDERER_EFFECTSYNTAXTREEEFFECTNODETYPES_H
