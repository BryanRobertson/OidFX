//======================================================================================
//! @file         RendererCapabilities.h
//! @brief        Constants representing capabilities of the renderer
//!               
//!               
//! @author       Bryan Robertson
//! @date         Monday, 06 June 2005
//! @copyright    Bryan Robertson 2005
//
//				  This file is part of OidFX Engine.
//
//  			  OidFX Engine is free software; you can redistribute it and/or modify
//  			  it under the terms of the GNU General Public License as published by
//  			  the Free Software Foundation; either version 2 of the License, or
//  			  (at your option) any later version.
//
//  			  OidFX Engine is distributed in the hope that it will be useful,
//  			  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  			  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//  			  GNU General Public License for more details.
//
//  			  You should have received a copy of the GNU General Public License
//  			  along with OidFX Engine; if not, write to the Free Software
//  			  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
//
//======================================================================================

#ifndef RENDERER_RENDERERCAPABILITIES_H
#define RENDERER_RENDERERCAPABILITIES_H



//namespace Renderer
namespace Renderer
{
	
	//! Boolean renderer capabilities
	enum ERendererCapability
	{
		CAP_HWRASTERISATION,
		CAP_HWTRANSFORMANDLIGHT,
		CAP_ANISOTROPICFILTERING,
		CAP_FOGRANGE,
		CAP_FOGTABLE,
		CAP_FOGVERTEX,
		CAP_MIPMAPLODBIAS,
		CAP_SCISSORTEST,
		CAP_SLOPESCALEDEPTHBIAS,
		CAP_ZFOG,

		//Depth test capabilities
		CAP_DEPTHBIAS,
		CAP_DEPTHTEST,
		CAP_DEPTHTEST_ALWAYS,
		CAP_DEPTHTEST_EQUAL,
		CAP_DEPTHTEST_GREATER,
		CAP_DEPTHTEST_GEQUAL,
		CAP_DEPTHTEST_LESS,
		CAP_DEPTHTEST_LEQUAL,
		CAP_DEPTHTEST_NEVER,
		CAP_DEPTHTEST_NOTEQUAL,

		//Source blend capabilities
		CAP_SRCBLEND_FACTOR,
		CAP_SRCBLEND_BOTHINVSRCALPHA,
		CAP_SRCBLEND_DESTALPHA,
		CAP_SRCBLEND_DESTCOLOUR,
		CAP_SRCBLEND_INVDESTALPHA,
		CAP_SRCBLEND_INVDESTCOLOUR,
		CAP_SRCBLEND_INVSRCALPHA,
		CAP_SRCBLEND_INVSRCCOLOUR,
		CAP_SRCBLEND_ONE,
		CAP_SRCBLEND_SRCALPHA,
		CAP_SRCBLEND_SRCALPHASAT,
		CAP_SRCBLEND_SRCCOLOUR,
		CAP_SRCBLEND_ZERO,

		//Destination blend capabilities
		CAP_DESTBLEND_FACTOR,
		CAP_DESTBLEND_BOTHINVSRCALPHA,
		CAP_DESTBLEND_DESTALPHA,
		CAP_DESTBLEND_DESTCOLOUR,
		CAP_DESTBLEND_INVDESTALPHA,
		CAP_DESTBLEND_INVDESTCOLOUR,
		CAP_DESTBLEND_INVSRCALPHA,
		CAP_DESTBLEND_INVSRCCOLOUR,
		CAP_DESTBLEND_ONE,
		CAP_DESTBLEND_SRCALPHA,
		CAP_DESTBLEND_SRCALPHASAT,
		CAP_DESTBLEND_SRCCOLOUR,
		CAP_DESTBLEND_ZERO,

		//Alpha test capabilities
		CAP_ALPHATEST,
		CAP_ALPHATEST_ALWAYS,
		CAP_ALPHATEST_EQUAL,
		CAP_ALPHATEST_GREATER,
		CAP_ALPHATEST_GEQUAL,
		CAP_ALPHATEST_LESS,
		CAP_ALPHATEST_LEQUAL,
		CAP_ALPHATEST_NEVER,
		CAP_ALPHATEST_NOTEQUAL,

		//Shading capabilities
		CAP_SHADE_ALPHAGOURAUD,
		CAP_SHADE_COLOURGOURAUD,
		CAP_SHADE_FOGGOURAUD,
		CAP_SHADE_SPECULARGOURAUD,
		
		//Texture capabilities
		CAP_TEXTURE_ALPHA,
		CAP_TEXTURE_CUBEMAP,
		//CAP_TEXTURE_CUBEMAP_NONPOW2,
		CAP_TEXTURE_MIPCUBEMAP,
		CAP_TEXTURE_MIPMAP,
		CAP_TEXTURE_MIPVOLUMEMAP,
		CAP_TEXTURE_PERSPECTIVE,
		//CAP_TEXTURE_NONPOW2_CONDITIONAL,
		CAP_TEXTURE_PROJECTED,
		CAP_TEXTURE_NONSQUARE,
		CAP_TEXTURE_VOLUMEMAP,
		//CAP_TEXTURE_VOLUMEMAP_NONPOW2,

		//Texture filter capabilities
		CAP_TEXTURE_FILTER_MAG_POINT,
		CAP_TEXTURE_FILTER_MIN_POINT,
		CAP_TEXTURE_FILTER_MAG_ANISOTROPIC,
		CAP_TEXTURE_FILTER_MIN_ANISOTROPIC,
		CAP_TEXTURE_FILTER_MIN_PYRAMIDALQUAD,
		CAP_TEXTURE_FILTER_MAG_PYRAMIDALQUAD,
		CAP_TEXTURE_FILTER_MIN_GAUSSIANQUAD,
		CAP_TEXTURE_FILTER_MAG_GAUSSIANQUAD,
		CAP_TEXTURE_FILTER_MIP_POINT,
		CAP_TEXTURE_FILTER_MIP_LINEAR,

		//Cubemap filter capabilities
		CAP_TEXTURE_FILTER_CUBE_MAG_POINT,
		CAP_TEXTURE_FILTER_CUBE_MIN_POINT,
		CAP_TEXTURE_FILTER_CUBE_MAG_ANISOTROPIC,
		CAP_TEXTURE_FILTER_CUBE_MIN_ANISOTROPIC,
		CAP_TEXTURE_FILTER_CUBE_MIN_PYRAMIDALQUAD,
		CAP_TEXTURE_FILTER_CUBE_MAG_PYRAMIDALQUAD,
		CAP_TEXTURE_FILTER_CUBE_MIN_GAUSSIANQUAD,
		CAP_TEXTURE_FILTER_CUBE_MAG_GAUSSIANQUAD,
		CAP_TEXTURE_FILTER_CUBE_MIP_POINT,
		CAP_TEXTURE_FILTER_CUBE_MIP_LINEAR,

		//Volume filter capabilities
		CAP_TEXTURE_FILTER_VOLUME_MAG_POINT,
		CAP_TEXTURE_FILTER_VOLUME_MIN_POINT,
		CAP_TEXTURE_FILTER_VOLUME_MAG_ANISOTROPIC,
		CAP_TEXTURE_FILTER_VOLUME_MIN_ANISOTROPIC,
		CAP_TEXTURE_FILTER_VOLUME_MIN_PYRAMIDALQUAD,
		CAP_TEXTURE_FILTER_VOLUME_MAG_PYRAMIDALQUAD,
		CAP_TEXTURE_FILTER_VOLUME_MIN_GAUSSIANQUAD,
		CAP_TEXTURE_FILTER_VOLUME_MAG_GAUSSIANQUAD,
		CAP_TEXTURE_FILTER_VOLUME_MIP_POINT,
		CAP_TEXTURE_FILTER_VOLUME_MIP_LINEAR,

		//Texture address capabilities
		CAP_TEXTURE_ADDRESS_BORDER,
		CAP_TEXTURE_ADDRESS_CLAMP,
		CAP_TEXTURE_ADDRESS_INDEPENDENTUV,
		CAP_TEXTURE_ADDRESS_MIRROR,
		CAP_TEXTURE_ADDRESS_MIRRORONCE,
		CAP_TEXTURE_ADDRESS_WRAP,

		//Stencil capabilities
		CAP_STENCIL_KEEP,
		CAP_STENCIL_ZERO,
		CAP_STENCIL_REPLACE,
		CAP_STENCIL_INCRSAT,
		CAP_STENCIL_DECRSAT,
		CAP_STENCIL_INVERT,
		CAP_STENCIL_INCR,
		CAP_STENCIL_DECR,
		CAP_STENCIL_TWOSIDED,

		//Texture operation capabilities
		CAP_TEXOP_ADD,
		CAP_TEXOP_ADDSIGNED,
		CAP_TEXOP_ADDSIGNED2X,
		CAP_TEXOP_ADDSMOOTH,
		CAP_TEXOP_BLENDCURRENTALPHA,
		CAP_TEXOP_BLENDDIFFUSEALPHA,
		CAP_TEXOP_BLENDFACTORALPHA,
		CAP_TEXOP_BLENDTEXTUREALPHA,
		CAP_TEXOP_BLENDTEXTUREALPHAPM,
		CAP_TEXOP_DISABLE,
		CAP_TEXOP_DOTPRODUCT3,
		CAP_TEXOP_LERP,
		CAP_TEXOP_MODULATE,
		CAP_TEXOP_MODULATE2X,
		CAP_TEXOP_MODULATE4X,
		CAP_TEXOP_MODULATE_ALPHA_ADDCOLOUR,
		CAP_TEXOP_MODULATE_COLOUR_ADDALPHA,
		CAP_TEXOP_MODULATE_INVALPHA_ADDCOLOUR,
		CAP_TEXOP_MODULATE_INVCOLOUR_ADDALPHA,
		CAP_TEXOP_MULTIPLYADD,
		CAP_TEXOP_PREMODULATE,
		CAP_TEXOP_SELECTARG1,
		CAP_TEXOP_SELECTARG2,
		CAP_TEXOP_SUBTRACT,

		//Light caps
		CAP_LIGHT_DIRECTIONAL,
		CAP_LIGHT_SPECULARLOCALVIEWER,
		CAP_LIGHT_POSITIONAL,

		//Texgen
		CAP_TEXGEN,
		CAP_TEXGEN_SPHEREMAP,

		//Material caps
		CAP_MATERIAL_SOURCECOLOUR,
		
		//Declaration types
		CAP_DECL_UBYTE4,
		CAP_DECL_UBYTE4N,
		CAP_DECL_SHORT2N,
		CAP_DECL_SHORT4N,
		CAP_DECL_USHORT2N,
		CAP_DECL_USHORT4N,
		CAP_DECL_DEC3N,
		CAP_DECL_FLOAT16_2,
		CAP_DECL_FLOAT16_4,

		//Shader caps
		CAP_SHADER_DIRECTX_VERTEXSHADER_ASM,
		CAP_SHADER_DIRECTX_VERTEXSHADER_HLSL,
		CAP_SHADER_DIRECTX_PIXELSHADER_ASM,
		CAP_SHADER_DIRECTX_PIXELSHADER_HLSL,

		CAP_SHADER_OPENGL_ARB_VERTEXPROGRAM,
		CAP_SHADER_OPENGL_VERTEXPROGRAM_GLSL,
		CAP_SHADER_OPENGL_ARB_FRAGMENTPROGRAM,
		CAP_SHADER_OPENGL_FRAGMENTPROGRAM_GLSL

	};
	//End ERendererCapability


	//! Renderer capabilities that are represented by integer values,
	//! such as MaxTextureSize
	enum EIntegerRendererCapability
	{
		//Texture caps
		CAP_TEXTURE_MAX_WIDTH,
		CAP_TEXTURE_MAX_HEIGHT,
		CAP_TEXTURE_MAX_VOLUMEEXTENT,
		CAP_TEXTURE_MAX_TEXTUREREPEAT,
		CAP_TEXTURE_MAX_ASPECTRATIO,
		CAP_TEXTURE_MAX_ANISOTROPY,
		CAP_TEXTURE_MAX_BLENDSTAGES,
		CAP_TEXTURE_MAX_SIMULTANEOUS,

		//Light caps
		CAP_LIGHT_MAX_ACTIVE,
		
		//Misc
		CAP_MAX_CLIPPLANES,
		CAP_MAX_VERTEXBLENDMATRICES,
		CAP_MAX_VERTEXBLENDMATRIXINDEX,
		CAP_MAX_PRIMITIVECOUNT,
		CAP_MAX_VERTEXINDEX,
		CAP_MAX_STREAMS,
		CAP_MAX_STREAMSTRIDE,
		CAP_VERTEXSHADERVERSION,
		CAP_PIXELSHADERVERSION,
		CAP_MAX_SIMULTANEOUS_RENDERTARGETS

	};
	//End EIntegerRendererCapablity


	//! Renderer capabilities that are represented by floating point values,
	//! such as GuardBandLeft
	enum EFloatRendererCapability
	{
		CAP_GUARDBAND_LEFT,
		CAP_GUARDBAND_RIGHT,
		CAP_GUARDBAND_TOP,
		CAP_GUARDBAND_BOTTOM,
		CAP_EXTENTSADJUST,
		CAP_MAX_POINTSIZE
	};
	//End EFloatRendererCapability

}
//end namespace Renderer


#endif
//#ifndef RENDERER_RENDERERCAPABILITIES
